include(FetchContent)
include(functions/NovelRTDeps_Populate)
message(STATUS "Fetching FLAC...")

set(BUILD_CXXLIBS OFF CACHE BOOL "" FORCE)
set(BUILD_PROGRAMS OFF CACHE BOOL "Build and install programs" FORCE)
set(BUILD_EXAMPLES OFF CACHE BOOL "Build and install examples" FORCE)
set(BUILD_TESTING OFF CACHE BOOL "Build tests" FORCE)
set(BUILD_DOCS OFF CACHE BOOL "Build documentation" FORCE)
set(INSTALL_MANPAGES OFF CACHE BOOL "" FORCE)
set(INSTALL_PKGCONFIG_MODULES OFF CACHE BOOL "" FORCE)
set(INSTALL_CMAKE_CONFIG_MODULE OFF CACHE BOOL "" FORCE)

if(NOVELRT_SHARED_FLAC OR NOVELRT_BUILD_SHARED_LIBS)
  set(type SHARED)
else()
  set(type STATIC)
endif()

FetchContent_Declare(FLAC
  URL https://github.com/xiph/flac/releases/download/1.3.4/flac-1.3.4.tar.xz
  URL_HASH SHA256=8ff0607e75a322dd7cd6ec48f4f225471404ae2730d0ea945127b1355155e737

  PREFIX "${CMAKE_CURRENT_BINARY_DIR}"
  TMP_DIR "${CMAKE_CURRENT_BINARY_DIR}/tmp"
  STAMP_DIR "${CMAKE_CURRENT_BINARY_DIR}/stamp"
  DOWNLOAD_DIR "${CMAKE_CURRENT_BINARY_DIR}/dl"
  SOURCE_DIR "${CMAKE_CURRENT_BINARY_DIR}/src"
  SUBBUILD_DIR "${CMAKE_CURRENT_BINARY_DIR}/build"
  BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}/bin"
  INSTALL_DIR "${CMAKE_CURRENT_BINARY_DIR}/inst"
  LOG_DIR "${CMAKE_CURRENT_BINARY_DIR}/log"
)

NovelRTDeps_PopulateExplicit(FLAC ${type})

set(FLAC_LIBRARY "FLAC::FLAC" PARENT_SCOPE)
set(FLAC_INCLUDE_DIR "${flac_SOURCE_DIR}/include" PARENT_SCOPE)

if(NOVELRT_INSTALL)
  install(
    TARGETS FLAC
    EXPORT NovelRTTargets
    DESTINATION lib
    RUNTIME DESTINATION bin
  )
endif()
