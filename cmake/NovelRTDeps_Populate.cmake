macro(NovelRTDeps_PopulateShared NAME)
  FetchContent_GetProperties(${NAME})
  string(TOLOWER ${NAME} LOWERNAME)
  if(NOT ${LOWERNAME}_POPULATED)
    FetchContent_Populate(${NAME})
    # Workaround to force libraries to build shared and not always export symbols
    # Mainly used for OneTBB, OpenAL, or any LGPL'ed library
    # Credit: https://stackoverflow.com/a/62103349
    set(BUILD_SHARED_LIBS_OLD ${BUILD_SHARED_LIBS})
    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS_OLD ${CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS})
    # Make subproject to use 'BUILD_SHARED_LIBS=ON' setting.
    set(BUILD_SHARED_LIBS ON CACHE INTERNAL "Build SHARED libraries")
    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS OFF CACHE INTERNAL "Don't export symbols for Windows")
    message(STATUS "Populating ${NAME} to build shared targets...")
    add_subdirectory(${${LOWERNAME}_SOURCE_DIR} ${${LOWERNAME}_BINARY_DIR} EXCLUDE_FROM_ALL)
    set(${LOWERNAME}_SOURCE_DIR ${${LOWERNAME}_SOURCE_DIR} CACHE STRING "${NAME} Source Directory" FORCE)
    set(${LOWERNAME}_BINARY_DIR ${${LOWERNAME}_BINARY_DIR} CACHE STRING "${NAME} Binary Directory" FORCE)
    # Set the values back to what they originally were
    set(BUILD_SHARED_LIBS ${BUILD_SHARED_LIBS_OLD} CACHE BOOL "Type of libraries to build" FORCE)
    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ${CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS_OLD} CACHE BOOL "Tell CMake to always export symbols on Windows" FORCE)
    set(${${LOWERNAME}_POPULATED} TRUE CACHE INTERNAL "Populated external dependency ${NAME}")
  endif()
endmacro()

macro(NovelRTDeps_PopulateStatic NAME)
  FetchContent_GetProperties(${NAME})
  string(TOLOWER ${NAME} LOWERNAME)
  if(NOT ${LOWERNAME}_POPULATED)
    FetchContent_Populate(${NAME})
    message(STATUS "Populating ${NAME} to build static targets...")
    add_subdirectory(${${LOWERNAME}_SOURCE_DIR} ${${LOWERNAME}_BINARY_DIR} EXCLUDE_FROM_ALL)
    set(${LOWERNAME}_SOURCE_DIR ${${LOWERNAME}_SOURCE_DIR} CACHE STRING "${NAME} Source Directory" FORCE)
    set(${LOWERNAME}_BINARY_DIR ${${LOWERNAME}_BINARY_DIR} CACHE STRING "${NAME} Binary Directory" FORCE)
    set(${${LOWERNAME}_POPULATED} TRUE CACHE INTERNAL "Populated external dependency ${NAME}")
  endif()
endmacro()

macro(NovelRTDeps_PopulateHeaderOnly NAME)
  FetchContent_GetProperties(${NAME})
  string(TOLOWER ${NAME} LOWERNAME)
  if(NOT ${LOWERNAME}_POPULATED)
    FetchContent_Populate(${NAME})
    message(STATUS "Populating ${NAME} as header only...")
    set(${LOWERNAME}_SOURCE_DIR ${${LOWERNAME}_SOURCE_DIR} CACHE STRING "${NAME} Source Directory" FORCE)
    set(${LOWERNAME}_BINARY_DIR ${${LOWERNAME}_BINARY_DIR} CACHE STRING "${NAME} Binary Directory" FORCE)
    set(${${LOWERNAME}_POPULATED} TRUE CACHE INTERNAL "Populated external dependency ${NAME}")
  endif()
endmacro()
